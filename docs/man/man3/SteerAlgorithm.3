.TH "SteerAlgorithm" 3 "Mon Nov 25 2019" "Version 7.0" "Robot Controller Module" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SteerAlgorithm \- Class \fBSteerAlgorithm\fP contains the methods of the Steering Algorithm\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SteerAlgorithm\&.hpp>\fP
.PP
Inherited by \fBNavigation\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSteerAlgorithm\fP ()"
.br
.RI "\fIConstructor of class \fBSteerAlgorithm\fP\&. \fP"
.ti -1c
.RI "\fB~SteerAlgorithm\fP ()"
.br
.RI "\fIDestructor of class \fBSteerAlgorithm\fP\&. \fP"
.ti -1c
.RI "double \fBgetCorrRadius\fP ()"
.br
.RI "\fIFunction to get corresponding radius in meters\&. \fP"
.ti -1c
.RI "bool \fBsetCorrRadius\fP (double r)"
.br
.RI "\fIFunction to set corresponding radius in meters\&. \fP"
.ti -1c
.RI "double \fBarcLength\fP (double diffAngle, double corrRadius)"
.br
.RI "\fIFunction to calculate the length of arc in meters to be traced in order to head in target direction\&. \fP"
.ti -1c
.RI "double \fBchangeWheelAngles\fP (double corrRadius, double shaftLength, double shaftDistance)"
.br
.RI "\fIFunction to calculate the angles in degrees for left and right wheels as per ackermann model, and then feed them to corresponding servo\&. \fP"
.ti -1c
.RI "bool \fBresetWheel\fP ()"
.br
.RI "\fIFunction to set wheel angles to 0\&. \fP"
.ti -1c
.RI "double \fBturnTime\fP (double arclength, double newVelocity)"
.br
.RI "\fIFunction to calculate time in seconds required to turn or keep wheels at the an angle\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const double \fBshaftLength\fP = 4"
.br
.ti -1c
.RI "const double \fBshaftDistance\fP = 8"
.br
.ti -1c
.RI "const double \fBmaxTurnVelocity\fP = 20"
.br
.ti -1c
.RI "double \fBheading\fP"
.br
.ti -1c
.RI "double \fBtargetHeading\fP"
.br
.ti -1c
.RI "int \fBdir\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBSteerAlgorithm\fP contains the methods of the Steering Algorithm\&. 
.SH "Member Function Documentation"
.PP 
.SS "double SteerAlgorithm::arcLength (double diffAngle, double corrRadius)"

.PP
Function to calculate the length of arc in meters to be traced in order to head in target direction\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdouble\fP diffAngle, difference in current and target heading 
.br
\fIdouble\fP corrRadius, corresponding radius 
.RE
.PP
\fBReturns:\fP
.RS 4
double arclength 
.RE
.PP

.SS "double SteerAlgorithm::changeWheelAngles (double corrRadius, double shaftLength, double shaftDistance)"

.PP
Function to calculate the angles in degrees for left and right wheels as per ackermann model, and then feed them to corresponding servo\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdouble\fP corrRadius, corresponding radius 
.br
\fIdouble\fP shaftLength, length between wheels 
.br
\fIdouble\fP shafDistance, distance between rear and front shaft 
.RE
.PP
\fBReturns:\fP
.RS 4
double maxWheelAngle 
.RE
.PP

.SS "double SteerAlgorithm::getCorrRadius ()"

.PP
Function to get corresponding radius in meters\&. 
.PP
\fBParameters:\fP
.RS 4
\fInone\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
double corresponding radius 
.RE
.PP

.SS "bool SteerAlgorithm::resetWheel ()"

.PP
Function to set wheel angles to 0\&. 
.PP
\fBParameters:\fP
.RS 4
\fInone\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
bool true 
.RE
.PP

.SS "bool SteerAlgorithm::setCorrRadius (double r)"

.PP
Function to set corresponding radius in meters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdouble\fP radius 
.RE
.PP
\fBReturns:\fP
.RS 4
bool true 
.RE
.PP

.SS "double SteerAlgorithm::turnTime (double arclength, double newVelocity)"

.PP
Function to calculate time in seconds required to turn or keep wheels at the an angle\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdouble\fP arcLength, length of arc to be traced 
.br
\fIdouble\fP newVelocity, velocity 
.RE
.PP
\fBReturns:\fP
.RS 4
double time 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Robot Controller Module from the source code\&.
